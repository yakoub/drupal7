<?php
function bundle_clone_menu() {
  $items['admin/structure/bundle_clone'] = array(
    'title' => 'Bundle clone',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bundle_clone_admin'),
    'access arguments' => array('administer site configuration'),
  );

  $items['admin/structure/bundle_clone/%'] = array(
    'title' => 'Bundle clone',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bundle_clone_admin', 3),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

function bundle_clone_admin($form, &$form_state, $entity_type = NULL) {

  if (isset($entity_type)) {
    $entity_bundles = field_info_bundles($entity_type);
    $form['entity_type'] = array(
      '#type' => 'fieldset',
      '#title' => $entity_type,
      '#tree' => TRUE,
      '#prefix' => l('Back to entity select', 'admin/structure/bundle_clone'),
    );
    
    $form['entity_type']['type'] = array(
      '#type' => 'value',
      '#value' => $entity_type,
    );

    $form['entity_type']['bundles'] = array(
      '#type' => 'value',
      '#value' => $entity_bundles,
    );

    $form['entity_type'] += bundle_clone_entity_items($entity_bundles);

    $form['save'] = array(
      '#type' => 'submit',
      '#value' => t('Save'),
    );
  }
  else {
    $bundles = field_info_bundles();
    $items = array();
    foreach ($bundles as $entity_type => $entity_bundles) {
      if (count($entity_bundles) > 1) {
	$items[] = l($entity_type, 'admin/structure/bundle_clone/' . $entity_type);
      }
    }
    $form['entities'] = array(
      '#theme' => 'item_list',
      '#items' => $items,
      '#title' => t('Entities'),
    );
  }

  return $form;
}

function bundle_clone_admin_submit(&$form, &$form_state) {
  $source = $form_state['values']['entity_type']['source'];
  $target = $form_state['values']['entity_type']['target'];
  $entity_type = $form_state['values']['entity_type']['type'];
  $bundles = $form_state['values']['entity_type']['bundles'];
  if ($source != 'none'  and $target != 'none' and $source != $target) {
    $holders = array(
      '!source' => l($bundles[$source]['label'], $bundles[$source]['admin']['real path']),
      '!target' => l($bundles[$target]['label'], $bundles[$target]['admin']['real path']),
    );
    drupal_set_message(t('Cloning !source into !target', $holders));
    bundle_clone_clone($entity_type, $source, $target);
  }
}

function bundle_clone_clone($entity_type, $source, $target) {
  $instances = field_info_instances($entity_type, $source);
  $target_instances = field_info_instances($entity_type, $target);
  foreach ($instances as $instance => $config) {
    if (isset($target_instances[$instance])) {
      drupal_set_message(t('Skipping @instance', array('@instance' => $instance)));
      continue;
    }
    drupal_set_message(t('Creating @instance', array('@instance' => $instance)));

    unset($config['id']);
    $config['bundle'] = $target;
    field_create_instance($config);
  }
}

function bundle_clone_entity_items($bundles) {
  $items = array();
  $options = array('none' => t('None'));
  foreach ($bundles as $name => $info) {
    $options[$name] = $info['label'];
  }
  $items['source'] = array(
    '#type' => 'select',
    '#title' => 'Source',
    '#options' => $options,
  );
  $items['target'] = array(
    '#type' => 'select',
    '#title' => 'Target',
    '#options' => $options,
  );
  return $items;
}
